openapi: 3.0.1
info:
  title: OpenAPI definition
  version: v0
servers:
  - url: http://localhost:8090
    description: Generated server url
paths:
  /graph-nodes/:
    get:
      tags:
        - Graph Node Controller
      operationId: getNodes
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GraphNode'
  /graph-edges/:
    get:
      tags:
        - Graph Controller
      operationId: getGraphs
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GraphEdge'
  /doors/:
    get:
      tags:
        - Door Controller
      operationId: getDoors
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Door'
  /buildings/:
    get:
      tags:
        - Building Controller
      operationId: getBuildings
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Building'
  /routes/:
    get:
      tags:
        - Route Controller
      operationId: getSimpleRoute
      parameters:
        - name: startingLocation
          in: query
          description: starting location
          required: true
          schema:
            type: array
            items:
              type: number
              format: double
            minItems: 2
            maxItems: 2
          style: form
          explode: false
        - name: endingLocation
          in: query
          description: starting location
          required: true
          schema:
            type: array
            items:
              type: number
              format: double
            minItems: 2
            maxItems: 2
          style: form
          explode: false
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Location'
components:
  schemas:
    GraphNode:
      type: object
      properties:
        latitude:
          type: number
          format: double
        longitude:
          type: number
          format: double
        description:
          type: string
        nodeID:
          type: integer
          format: int64
    GraphEdge:
      type: object
      properties:
        edgeId:
          type: integer
          format: int64
        fromNode:
          $ref: '#/components/schemas/GraphNode'
        toNode:
          $ref: '#/components/schemas/GraphNode'
        fromToAction:
          type: string
        toFromAction:
          type: string
        distance:
          type: number
          format: double
        pathshape:
          type: string
        bidirectional:
          type: boolean
    Building:
      type: object
      properties:
        buildingId:
          type: integer
          format: int64
        name:
          type: string
        geojson:
          type: string
        graphNode:
          $ref: '#/components/schemas/GraphNode'
        nodeID:
          type: integer
          format: int64
    Door:
      type: object
      properties:
        doorId:
          type: integer
          format: int64
        node:
          $ref: '#/components/schemas/GraphNode'
        building:
          $ref: '#/components/schemas/Building'
    Location:
      type: object
      properties:
        latitude:
          type: number
          format: double
        longitude:
          type: number
          format: double
